/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package deliveryday;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 *
 * @author Santosh
 */
public class DDForm extends javax.swing.JFrame {

    private static HashMap<String, String> hHolidays = new HashMap(); 
    static SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy hh.mm.ss aa");
    static SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/dd");
    static SimpleDateFormat sdftm = new SimpleDateFormat("yyyy/MM/dd HH:mm");
    
    /**
     * Creates new form DDForm
     */
    public DDForm() {
        initComponents();
        todayTextField.setText("26-06-2019 10.30.00 AM"); 
        hHolidays = setHolidaysValue();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        todayTextField = new javax.swing.JTextField();
        submitButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        arrivalTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        DDLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        clearButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        DDIslandLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("dDIslandLabel"); // NOI18N

        jLabel1.setText("Today");

        todayTextField.setName("todayTextBox"); // NOI18N

        submitButton.setText("Submit");
        submitButton.setName("submitButton"); // NOI18N
        submitButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                submitButtonMousePressed(evt);
            }
        });

        jLabel2.setText("Arrival");

        arrivalTextField.setName("arrivalDayTextBox"); // NOI18N

        jLabel3.setText("Delivery Day");

        jLabel5.setText("DD : Island");

        jLabel6.setText("RES");

        jLabel7.setText("RES");

        jTextField3.setName("ddCommentIslandTextBox"); // NOI18N

        jTextField4.setName("ddCommentTextBox"); // NOI18N

        clearButton.setText("Clear");
        clearButton.setName("clearButton"); // NOI18N
        clearButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clearButtonMouseClicked(evt);
            }
        });

        jLabel8.setText("DD");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(DDIslandLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(89, 89, 89)
                                .addComponent(DDLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(clearButton, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                                .addGap(211, 211, 211))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(todayTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(45, 45, 45))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(70, 70, 70)
                    .addComponent(arrivalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(284, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(125, 125, 125)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(368, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(todayTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(submitButton)
                            .addComponent(clearButton))
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DDIslandLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(91, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(DDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(121, 121, 121))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(93, 93, 93)
                    .addComponent(arrivalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(244, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(220, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(122, 122, 122)))
        );

        DDIslandLabel.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitButtonMousePressed
        try{ 
        Date today = dateFormat.parse(todayTextField.getText());
        
        List map = funGetDeliveryDate(hHolidays,arrivalTextField.getText(),today);
        DDLabel.setText(map.toArray()[0].toString());
        DDIslandLabel.setText(map.toArray()[1].toString());
        
        }
        catch(Exception ex)
        {
            
        }
         
        // TODO add your handling code here:
    }//GEN-LAST:event_submitButtonMousePressed

    private void clearButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearButtonMouseClicked
        DDLabel.setText(null);
        DDIslandLabel.setText(null);
    }//GEN-LAST:event_clearButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DDForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DDForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DDForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DDForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DDForm().setVisible(true);
            }
        });
    }
    
    public static List<String> funGetDeliveryDate(HashMap<String, String> hHolidays, String strArrivingdate,Date today) throws Exception
        {                                
                Calendar instance = Calendar.getInstance();
                //Date deliveryDate = new Date();	// 納期日(当日で初期化)  
                Date deliveryDate = today;
                
                // 日付までのフォーマットで当日0:00を作成
		String strToDay = sdf.format(deliveryDate);
		// 日時のフォーマットで当日12:00を作成
		Date ampm = sdftm.parse(strToDay + " 12:00");  
                boolean isAfternoon = false;                                      
                    if(deliveryDate.after(ampm))
                        isAfternoon = true;
                    
                    instance.setTime(deliveryDate);                
               
                    boolean isTodayHoliday = isDateHoliday(hHolidays,strToDay);
                             
                    // Day for confirmation
                    if(isTodayHoliday || isAfternoon)
                          instance = getWorkingDayInstance(hHolidays,instance);
                                        
                   instance = getWorkingDayInstance(hHolidays,instance);
                   deliveryDate = instance.getTime();
                   
                Calendar islandInstance = getWorkingDayInstance(hHolidays,instance);
                Date islandDate = islandInstance.getTime();
                
                boolean isArrivalDateHoliday = false;
                String strArrivalDay = new String();
                 if(strArrivingdate != null && !strArrivingdate.trim().isEmpty()) {
                     
                    Date tempDeliveryDate = sdf.parse(strArrivingdate);
                    if(tempDeliveryDate.after(deliveryDate))
                    {
                    strArrivalDay = sdf.format(tempDeliveryDate);
                    
                    Calendar tempInstance = Calendar.getInstance();
                    tempInstance.setTime(tempDeliveryDate);
                    islandInstance = tempInstance;
               
                    isArrivalDateHoliday = isDateHoliday(hHolidays,strArrivalDay);
                                                 
                    if(isArrivalDateHoliday && tempInstance.get(Calendar.DAY_OF_WEEK) != Calendar.SATURDAY){
                          tempInstance = getWorkingDayInstance(hHolidays,tempInstance);    
                          islandInstance = tempInstance;
                    }
                       instance = tempInstance;
                       deliveryDate = instance.getTime();
                       islandDate = islandInstance.getTime();
                    }
                    
                }
                 
                
                
                List<String> map = new ArrayList<String>();                
                map.add(deliveryDate.toString());
                map.add(islandDate.toString());
                        
                return map;
        }
    
    private static boolean isDateHoliday(HashMap<String, String> hHolidays,String date){
        boolean isDayHoliday = false;
        for (Map.Entry<String, String> entry : hHolidays.entrySet()) {
                       if(entry.getKey().contains(date) && entry.getValue().contains("0"))
                          {
                             isDayHoliday = true;
                             break;
                          }
		      }
        return isDayHoliday;
    }
    
     private static Calendar getWorkingDayInstance(HashMap<String, String> hHolidays,Calendar cInstance){
             String strToDay;
             Calendar instance = cInstance;
             while(true)
                    {
                        instance.add(Calendar.DAY_OF_MONTH, 1);
                        strToDay = sdf.format(instance.getTime());
                        boolean increment = false;
                        for (Map.Entry<String, String> entry : hHolidays.entrySet()) {
                            if(entry.getKey().contains(strToDay) && entry.getValue().contains("0"))
                            {
                                increment = true;
                                break;
                            }
		         }
                        if(!increment || (instance.get(Calendar.DAY_OF_WEEK) == Calendar.SATURDAY))
                            break;
                    }
             return instance;
         } 
    
    private HashMap<String,String> setHolidaysValue()
    {
        HashMap<String,String> holidays = new HashMap();
        holidays.put("2019/05/19 00:00:00","0");
        holidays.put("2019/05/24 00:00:00","1");
        holidays.put("2019/05/25 00:00:00","0");
        holidays.put("2019/05/26 00:00:00","0");
        holidays.put("2019/05/31 00:00:00","1");
        holidays.put("2019/06/01 00:00:00","0");
        holidays.put("2019/06/02 00:00:00","0");
        holidays.put("2019/06/07 00:00:00","1");
        holidays.put("2019/06/08 00:00:00","0");
        holidays.put("2019/06/09 00:00:00","0");
        holidays.put("2019/06/14 00:00:00","1");
        holidays.put("2019/06/15 00:00:00","0");
        holidays.put("2019/06/16 00:00:00","0");
        holidays.put("2019/06/21 00:00:00","1");
        holidays.put("2019/06/22 00:00:00","0");
        holidays.put("2019/06/23 00:00:00","0");
        holidays.put("2019/06/28 00:00:00","1");
        holidays.put("2019/06/29 00:00:00","0");
        holidays.put("2019/06/30 00:00:00","0");
        holidays.put("2019/07/05 00:00:00","1");
        holidays.put("2019/07/06 00:00:00","0");
        return holidays;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel DDIslandLabel;
    private javax.swing.JLabel DDLabel;
    private javax.swing.JTextField arrivalTextField;
    private javax.swing.JButton clearButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JButton submitButton;
    private javax.swing.JTextField todayTextField;
    // End of variables declaration//GEN-END:variables
}
